name: üé≠ E2E Tests (Simple Debug)

on:
  deployment_status:

jobs:
  debug-deployment:
    name: üîç Debug Deployment Event
    runs-on: ubuntu-latest
    if: github.event.deployment_status.state == 'success'
    steps:
      - name: üìã Log Full GitHub Event
        run: |
          echo "=========================================="
          echo "üöÄ DEPLOYMENT SUCCESS EVENT RECEIVED"
          echo "=========================================="
          echo ""
          echo "üìã FULL EVENT JSON:"
          echo '${{ toJSON(github.event) }}'
          echo ""
          echo "=========================================="
          echo "üîç KEY DETAILS:"
          echo "=========================================="
          echo "Deployment State: ${{ github.event.deployment_status.state }}"
          echo "Environment: ${{ github.event.deployment.environment }}"
          echo "URL: ${{ github.event.deployment.payload.web_url || github.event.deployment.url }}"
          echo "SHA: ${{ github.event.deployment.sha }}"
          echo "Ref: ${{ github.event.deployment.ref }}"
          echo "Creator: ${{ github.event.deployment.creator.login }}"
          echo "=========================================="
          
      - name: üè∑Ô∏è Detect Platform
        run: |
          URL="${{ github.event.deployment.payload.web_url || github.event.deployment.url || 'none' }}"
          ENV="${{ github.event.deployment.environment }}"
          
          echo "Checking URL: $URL"
          echo "Environment: $ENV"
          
          if [[ "$URL" == *"vercel.app"* ]]; then
            echo "‚úÖ DETECTED: Vercel deployment"
          elif [[ "$URL" == *"railway.app"* ]]; then
            echo "‚úÖ DETECTED: Railway deployment"
          else
            echo "‚ùì UNKNOWN: Could not detect platform from URL"
            echo "   URL: $URL"
            echo "   ENV: $ENV"
          fi
          
      - name: üìä Check All Deployments for this SHA
        uses: actions/github-script@v7
        with:
          script: |
            const sha = '${{ github.event.deployment.sha }}';
            console.log(`\nüîç Checking all deployments for SHA: ${sha}\n`);
            
            // Get all deployments for this SHA
            const { data: deployments } = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: sha
            });
            
            console.log(`Found ${deployments.length} deployments for this SHA:`);
            
            for (const dep of deployments) {
              // Get deployment status
              const { data: statuses } = await github.rest.repos.listDeploymentStatuses({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: dep.id
              });
              
              const latestStatus = statuses[0];
              const url = dep.payload?.web_url || dep.url || 'NO_URL';
              
              console.log(`\nüì¶ Deployment ${dep.id}:`);
              console.log(`  - Environment: ${dep.environment}`);
              console.log(`  - URL: ${url}`);
              console.log(`  - Latest Status: ${latestStatus?.state || 'NO_STATUS'}`);
              console.log(`  - Created: ${dep.created_at}`);
            }
            
            // Check if we have both Vercel and Railway deployed
            const vercelDeployment = deployments.find(d => 
              (d.payload?.web_url || d.url || '').includes('vercel.app')
            );
            const railwayDeployment = deployments.find(d => 
              (d.payload?.web_url || d.url || '').includes('railway.app')
            );
            
            console.log('\n========================================');
            console.log('üéØ DEPLOYMENT SUMMARY:');
            console.log(`Vercel: ${vercelDeployment ? '‚úÖ FOUND' : '‚ùå NOT FOUND'}`);
            console.log(`Railway: ${railwayDeployment ? '‚úÖ FOUND' : '‚ùå NOT FOUND'}`);
            
            if (vercelDeployment && railwayDeployment) {
              console.log('\nüéâ BOTH PLATFORMS DEPLOYED - READY FOR E2E TESTS!');
            } else {
              console.log('\n‚è≥ WAITING FOR BOTH PLATFORMS TO DEPLOY...');
            }